user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;    sendfile on;
    keepalive_timeout 65;    # Configuração de upstream para cada microserviço
    upstream usuario_service {
        # Usar apenas o nome do serviço - Docker fará o load balancing automaticamente
        server usuario:8080 max_fails=3 fail_timeout=30s;
    }

    upstream sala_service {
        server sala:8080 max_fails=3 fail_timeout=30s;
    }

    upstream reserva_service {
        server reserva:8080 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        
        location = /health {
            return 200 "Nginx is working!";
            add_header Content-Type text/plain;
        }        # Rotas para o serviço de usuários
        location /api/usuarios {
            proxy_pass http://usuario_service/api/usuarios;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Rotas para o serviço de salas
        location /api/salas {
            proxy_pass http://sala_service/api/salas;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Rotas para o serviço de reservas
        location /api/reservas {
            proxy_pass http://reserva_service/api/reservas;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }        # Rotas para Swagger UI de cada serviço
        # Swagger UI para serviço de usuários
        location /api/usuarios/swagger-ui {
            proxy_pass http://usuario_service/swagger-ui.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/usuarios/swagger-ui/ {
            proxy_pass http://usuario_service/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/usuarios/v3/api-docs {
            proxy_pass http://usuario_service/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Swagger UI para serviço de salas
        location /api/salas/swagger-ui {
            proxy_pass http://sala_service/swagger-ui.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/salas/swagger-ui/ {
            proxy_pass http://sala_service/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/salas/v3/api-docs {
            proxy_pass http://sala_service/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Swagger UI para serviço de reservas
        location /api/reservas/swagger-ui {
            proxy_pass http://reserva_service/swagger-ui.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/reservas/swagger-ui/ {
            proxy_pass http://reserva_service/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/reservas/v3/api-docs {
            proxy_pass http://reserva_service/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Rota padrão (caso tenha um frontend)
        location / {
            return 200 "API Gateway is running! Use /api/usuarios, /api/salas, or /api/reservas";
            add_header Content-Type text/plain;
        }
    }
}
